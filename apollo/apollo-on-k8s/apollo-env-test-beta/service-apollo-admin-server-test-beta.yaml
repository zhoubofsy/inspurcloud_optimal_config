
---
# configmap for apollo-admin-server-test-beta
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: ns-apollo
  name: configmap-apollo-admin-server-test-beta
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://service-mysql-for-apollo-test-beta-env.ns-apollo:3306/TestBetaApolloConfigDB?characterEncoding=utf8
    spring.datasource.username = root
    spring.datasource.password = qwe123ASD#@!
    eureka.service.url = http://statefulset-apollo-config-server-test-beta-0.service-apollo-meta-server-test-beta:8080/eureka/

---
kind: Service
apiVersion: v1
metadata:
  namespace: ns-apollo
  name: service-apollo-admin-server-test-beta
  labels:
    app: service-apollo-admin-server-test-beta
spec:
  ports:
    - protocol: TCP
      port: 8090
      targetPort: 8090
  selector:
    app: pod-apollo-admin-server-test-beta
  type: ClusterIP
  sessionAffinity: ClientIP

---
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  namespace: ns-apollo
  name: deployment-apollo-admin-server-test-beta
  labels:
    app: deployment-apollo-admin-server-test-beta
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pod-apollo-admin-server-test-beta
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pod-apollo-admin-server-test-beta
    spec:
#      nodeSelector:
#        node: "apollo"
      nodeName: kubernetes-node-1
      
      volumes:
        - name: volume-configmap-apollo-admin-server-test-beta
          configMap:
            name: configmap-apollo-admin-server-test-beta
            items:
              - key: application-github.properties
                path: application-github.properties
      
      initContainers:
        - image: 10.46.10.36/apollo/alpine-bash:3.8
          name: check-service-apollo-config-server-test-beta
          command: ['bash', '-c', "curl --connect-timeout 2 --max-time 5 --retry 60 --retry-delay 1 --retry-max-time 120 service-apollo-config-server-test-beta.ns-apollo:8080"]
      
      containers:
        - image: 10.46.10.36/apollo/apollo-admin-server:v1.3.0
          imagePullPolicy: IfNotPresent
          name: container-apollo-admin-server-test-beta
          ports:
            - protocol: TCP
              containerPort: 8090
          
          volumeMounts:
            - name: volume-configmap-apollo-admin-server-test-beta
              mountPath: /apollo-admin-server/config/application-github.properties
              subPath: application-github.properties
          
          env:
            - name: APOLLO_ADMIN_SERVICE_NAME
              value: "service-apollo-admin-server-test-beta.ns-apollo"
          
          readinessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 10
            periodSeconds: 5
          
          livenessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 120
            periodSeconds: 10
          
      dnsPolicy: ClusterFirst
      restartPolicy: Always
